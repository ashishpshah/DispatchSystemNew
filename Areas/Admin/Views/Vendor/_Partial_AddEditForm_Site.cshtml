@model ResponseModel<Vendor>
@{
	Layout = null;
	var IndexPageUrl = "/" + ViewContext.RouteData.Values["Area"].ToString() + "/" + ViewContext.RouteData.Values["Controller"].ToString() + "/Index";
}

<div class="col-12 card card-primary p-0 m-0 shadow-none mt-3">
	<div class="form-group row">
		<label for="SiteCode" class="col-sm-2 col-form-label">Site Code <span style="color:red">*</span></label>
		<div class="col-sm-4">
			<input type="text" class="form-control form-control-sm" name="SiteCode" value="@Model.Obj.SiteCode" data-required data-msg="The Site Code field is required." autocomplete="off" @(string.IsNullOrEmpty(Model.Obj.SiteCode) ? "" : "readonly")>
		</div>
		<label for="SiteName" class="col-sm-2 col-form-label">Site Name <span style="color:red">*</span></label>
		<div class="col-sm-4">
			<input type="text" class="form-control form-control-sm" name="SiteName" value="@Model.Obj.SiteName" data-required data-msg="The Site Name is required." autocomplete="off">
		</div>
	</div>


	<div class="form-group row">
		<label for="Alt_Mobile_No" class="col-sm-2 col-form-label">Mobile No.</label>
		<div class="col-sm-4">
			<input type="text" class="form-control form-control-sm isNumberKey" name="Alt_Mobile_No" maxlength="11" autocomplete="off" value="@Model.Obj.Alt_Mobile_No">
		</div>
		<label for="Alt_Email_Id" class="col-sm-2 col-form-label">Email</label>
		<div class="col-sm-4">
			<input type="text" class="form-control form-control-sm" name="Alt_Email_Id" autocomplete="off" value="@Model.Obj.Alt_Email_Id">
		</div>
	</div>
	<div class="form-group row">
		<label for="Full_Address" class="col-sm-2 col-form-label">Address <span style="color:red">*</span></label>
		<div class="col-sm-10">
			<input type="text" class="form-control form-control-sm" name="Full_Address" data-required data-msg="The Address field is required." autocomplete="off" value="@Model.Obj.Full_Address">
		</div>
	</div>
	<div class="form-group row">
		<label class="col-sm-2 col-form-label">Country <span style="color:red">*</span></label>
		<div class="col-sm-2">
			<select id="Country_Id" name="Country_Id" class="form-control form-control-sm select2" onchange="Get_StateList()">
				@if (Model != null && Model.SelectListItems != null)
				{
					foreach (var item in Model.SelectListItems.Where(x => x.Group == "C"))
					{
						if (item.Value == Convert.ToString(@Model.Obj.Country_Id))
						{
							<option value="@item.Value" selected>@item.Text</option>
						}
						else
						{
							<option value="@item.Value">@item.Text</option>
						}

					}
				}
			</select>
		</div>
		<label class="col-sm-1 col-form-label">State <span style="color:red">*</span></label>
		<div class="col-sm-2">
			<select id="State_Id" name="State_Id" class="form-control form-control-sm select2" onchange="Get_DistrictList()">
				@if (Model != null && Model.SelectListItems != null)
				{
					foreach (var item in Model.SelectListItems.Where(x => x.Group == "S"))
					{
						if (item.Value == Convert.ToString(@Model.Obj.State_Id))
						{
							<option value="@item.Value" selected>@item.Text</option>
						}
						else
						{
							<option value="@item.Value">@item.Text</option>
						}

					}
				}
			</select>
		</div>
		<label class="col-sm-2 col-form-label">District <span style="color:red">*</span></label>
		<div class="col-sm-2">
			<select id="District_Id" name="District_Id" class="col-sm-3 form-control form-control-sm select2">
				@if (Model != null && Model.SelectListItems != null)
				{
					foreach (var item in Model.SelectListItems.Where(x => x.Group == "D"))
					{
						if (item.Value == Convert.ToString(Model.Obj.District_Id))
						{
							<option value="@item.Value" selected>@item.Text</option>
						}
						else
						{
							<option value="@item.Value">@item.Text</option>
						}

					}
				}
			</select>
		</div>
	</div>
	<div class="form-group row">
		<label for="City" class="col-sm-2 col-form-label">City</label>
		<div class="col-sm-3">
			<input type="text" class="form-control form-control-sm" name="City" maxlength="11" autocomplete="off" value="@Model.Obj.City">
		</div>
		<label for="Postal_Code" class="col-sm-2 col-form-label">Postal Code</label>
		<div class="col-sm-2">
			<input type="text" class="form-control form-control-sm isNumberKey" name="Postal_Code" maxlength="6" autocomplete="off" value="@(Model.Obj.Postal_Code > 0 ? Model.Obj.Postal_Code.ToString():"" )">
		</div>

	</div>
</div>
<div class="col-12 text-center">
	<button type="submit" class="btn btn-success btnSubmit">Save</button>
	<button type="button" class="btn btn-danger" onclick="fnCloseParialView('divformSave_VendorSite', '#table_VendorSite');">Cancel</button>
</div>
