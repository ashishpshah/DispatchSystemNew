@model ResponseModel<QRCodeGeneration>

@{
    ViewData["Title"] = "QR Code Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var Url_RootToController = Url.Content("~/") + ViewContext.RouteData.Values["area"].ToString() + "/" + ViewContext.RouteData.Values["Controller"].ToString();

    string hashZ = "@";

}


<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">QR Code Search</h1>
            </div>

        </div>
    </div>
</div>
<section class="content">
    <div class="container-fluid">
        <div class="card card-primary card-outline">

            <div class="card-body">

                <div class="panel-divider">
                    <span>Search</span>
                    <div class="row no-gutters p-0 m-0">
                        <div class="col-12 row no-gutters">
                            <div class="form-group col-md-2 mx-3">
                                <label class="col-form-label" style="align-content:start">QR Code</label>
                                <input type="text" class="form-control form-control-sm" id="Qr_Code" autocomplete="off">
                            </div>
                            <div class="form-group col-md-2 mx-3">
                                <label class="col-form-label" style="align-content:start">QR Code URL</label>
                                <input type="text" class="form-control form-control-sm" id="Qr_Code_Url" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-12 no-gutters my-3">
                            <div class="form-group mx-3 text-center">
                                <label class="col-form-label text-right" style="align-content:start">&nbsp;</label>

                                <button type="button" class="btn btn-info btn-md pull-right mr-2" onclick="fnExecute_Report(false)"> Search </button>
                                <button type="button" class="btn btn-danger btn-md pull-right mr-2" onclick="fnClear()"> Clear </button>
                                <button type="button" class="btn btn-primary btn-md pull-right mr-2" onclick="fnExecute_Report(true)"> Print </button>
                                <button type="button" class="btn btn-success btn-md pull-right mr-2" id="btnExport"> Export </button>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>

                <div class="panel-divider">
                    <span>Details</span>
                    <div class="row no-gooters">
                        <div class="col-12 card card-primary p-0 m-0 shadow-none" style="margin: 0rem !important;">
                            <div class="card-body py-1 px-0" id="div_DataTable"></div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>



@section Scripts {

    <script type="text/javascript">

        function fnClear() {
            $('#Qr_Code').val("");
            $('#Qr_Code_Url').val('');
            $('#div_DataTable').html('');
        }

        $("#btnExport").click(function () {
            $("#tblmain").table2excel({
                filename: "QRCodeSearch.xls"
            });
            return false;
        });

        $(function () { });

        function fnExecute_Report($isPrint) {
            $('#div_DataTable').html('');

            var Qr_Code = $('#Qr_Code').val();
            var Qr_Code_Url = $('#Qr_Code_Url').val();
            
            if (Qr_Code_Url != '' && Qr_Code_Url != null && Qr_Code_Url != undefined) {

                var urlObject = new URL(Qr_Code_Url);

                var domainName = urlObject.hostname;

                var urlParts = Qr_Code_Url.split(domainName);

                if (urlParts.length > 1) {
                    var pathPart = urlParts[1];

                    var modifiedPathPart = pathPart.replace(/\//g, function (match, offset) {
                        return (offset / match.length % 2 === 0) ? '(' : ')';
                    });

                    Qr_Code = modifiedPathPart;
                }
            }
            var $url = '@Url.Action("GetData", "QRCodeSearch", new { area = "Admin" })?Qr_code=' + Qr_Code + '&isPrint=' + $isPrint;

            if ($isPrint == true) {
                var printWindow = window.open($url, '_blank');

                if (printWindow) {
                    printWindow.onload = function () {

                        var css = '@hashZ' + 'page { size: landscape; }',
                            head = printWindow.document.head || printWindow.document.getElementsByTagName('head')[0],
                            style = document.createElement('style');

                        style.type = 'text/css';
                        style.media = 'print';

                        if (style.styleSheet) {
                            style.styleSheet.cssText = css;
                        } else {
                            style.appendChild(document.createTextNode(css));
                        }

                        head.appendChild(style);

                        //don't forget to find and remove style if you don't want all you documents stay in landscape

                        printWindow.print();
                    };
                }
            }
            else {

                ShowLoader(true);

                $.ajax({
                    type: "GET",
                    url: $url,
                    data: null,
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {

                        setTimeout(function () {

                            $('#div_DataTable').html(response);

                            try { fnLoadCommonTable('#div_DataTable .table_Common'); } catch { }

                            ShowLoader(false);

                        }, 1000);

                    },
                    failure: function (response) {
                        ShowLoader(false);
                        CommonAlert_Error(null);
                    },
                    error: function (response) {
                        ShowLoader(false);
                        CommonAlert_Error(null);
                    }
                });
            }
            // }
            // else
            //ShowLoader(false);
        }

    </script>
}

