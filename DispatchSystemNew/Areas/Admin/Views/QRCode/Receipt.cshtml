@model ResponseModel<QRCodeGeneration>

@{
	ViewData["Title"] = "QR Code";
	Layout = "~/Views/Shared/_Layout.cshtml";
	var Url_RootToController = Url.Content("~/") + ViewContext.RouteData.Values["area"].ToString() + "/" + ViewContext.RouteData.Values["Controller"].ToString();
}


<div class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1 class="m-0">QR Code Print Dispatch</h1>
			</div>

		</div>
	</div>
</div>
<section class="content">
	<div class="container-fluid">
		<div class="card card-primary card-outline">

			<div class="card-body">

				<div class="panel-divider">
					<span>Search Requests</span>
					<div class="row no-gutters p-0 m-0">
						<div class="col-12 row no-gutters">
							<div class="form-group col-md-2 mx-3">
								<label class="col-form-label" style="align-content:start">Request Number</label>
								<input type="text" class="form-control form-control-sm" id="RequestNo" autocomplete="off">
							</div>
							<div class="form-group col-md-2 mx-3">
								<label class="col-form-label" style="align-content:start">PO Number</label>
								<input type="text" class="form-control form-control-sm isNumberKey" id="PoNo" autocomplete="off">
							</div>
							<div class="form-group col-md-3 mx-3">
								<label class="col-form-label text-right" style="align-content:start">SKU Name</label>
								<select class="form-control form-control-sm select2" id="SKU">
									@if (Model != null && Model.SelectListItems != null)
									{
										foreach (var item in Model.SelectListItems)
										{
											<option value="@item.Value">@item.Text</option>
										}
									}
								</select>
							</div>
						</div>

						<div class="col-12 row no-gutters">
							<div class="form-group col-md-2 mx-3">
								<label class="col-form-label" style="align-content:start">Vender Consignment No.</label>
								<input type="text" class="form-control form-control-sm" id="ConsignmentNo" autocomplete="off">
							</div>
						</div>

						<div class="col-12 row no-gutters">
							<div class="form-group col-md-2 mx-3">
								<label class="col-form-label" style="align-content:start">Request Date From</label>
								<input type="text" class="form-control form-control-sm datepicker" id="FromDate" data-max="@DateTime.Now.ToString("dd/MM/yyyy").Replace("-", "/")" autocomplete="off">
							</div>
							<div class="form-group col-md-2 mx-3">
								<label class="col-form-label" style="align-content:start">Request Date To</label>
								<input type="text" class="form-control form-control-sm datepicker" id="ToDate" data-max="@DateTime.Now.ToString("dd/MM/yyyy").Replace("-", "/")" autocomplete="off">
							</div>
							<div class="form-group col-md-1 mx-3 d-flex align-items-end">
								<label class="col-form-label text-right" style="align-content:start">&nbsp;</label>

								<button type="button" class="btn btn-info btn-md pull-right mr-2" onclick="fnLoadTableData()"> Search </button>
								<button type="button" class="btn btn-danger btn-md pull-right mr-2" onclick="fnClear()"> Clear </button>
							</div>
						</div>
					</div>
					<div class="clearfix"></div>
				</div>

				<div class="panel-divider">
					<span>Request List</span>
					<div class="row no-gutters p-0 m-0">
						<div class="col-12 text-center">
							<button type="button" class="btn btn-success" onclick="fnClick_Receive('@DateTime.Now.ToString("yyyy-MM-dd")', '@Common.Get_Session(SessionKey.USER_NAME)')">Receive</button>
						</div>
					</div>
					<div class="row no-gooters p-0 m-0">
						<div class="col-md-12 my-1">
							<table class="table table-bordered table-striped table-hover w-100" id="dataTable_PoDetails"></table>
						</div>
						<div class="clearfix"></div>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>



@section Scripts{

	<script type="text/javascript">

		var local_$dataTableMain = null;

		$(function () { fnLoadTableData(); });

		function fnLoadTableData() {
			if ($.fn.DataTable.isDataTable('#dataTable_PoDetails')) {
				$('#dataTable_PoDetails').DataTable().destroy();
			}

			dataTableMain = $("#dataTable_PoDetails")
				.DataTable({
					"destroy": true,
					"pageLength": 50,
					"lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
					"sAjaxSource": "@Url_RootToController/GetData_PoDetails",
					"bServerSide": true,
					"bProcessing": true,
					"bSearchable": true,
					"scrollX": true,
					"order": [[0, 'asc']],
					"language": { "emptyTable": "No record found.", "processing": '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> ' },
					"fnServerParams": function (aoData) {
						aoData.push({ "name": "RequestNo", "value": "" + $('#RequestNo').val() });
						aoData.push({ "name": "PoNo", "value": "" + $('#PoNo').val() });
						aoData.push({ "name": "VendorCode", "value": "" });
						aoData.push({ "name": "ProductId", "value": "" + $('#SKU option:selected').val() });
						aoData.push({ "name": "FromDate", "value": "" + $('#FromDate').val() });
						aoData.push({ "name": "ToDate", "value": "" + $('#ToDate').val() });
						aoData.push({ "name": "ConsignmentNo", "value": "" + $('#ConsignmentNo').val() });
						aoData.push({ "name": "Type", "value": "RECEIPT" });
					},
					"columns": [
						{
							"data": null,
							"className": "text-center select-checkbox",
							"autoWidth": false, "searchable": false, "orderable": false, "width": "5%",
							"render": function (data, type, row, meta) {
								return '<input type="checkbox" value="' + data.id + '">';
							}
						},
						{ "title": "No.", "data": "srNo", "autoWidth": false, "searchable": true, "width": "5%", "class": "text-center" },
						{ "title": "Vendor Code", "data": "vendorCode", "autoWidth": true, "searchable": true },
						{ "title": "Vendor", "data": "vendorName", "autoWidth": true, "searchable": true },
						{ "title": "Vendor Site", "data": "vendorSiteName", "autoWidth": true, "searchable": true },
						{ "title": "Consign No.", "data": "consignmentNo", "autoWidth": true, "searchable": true },
						{ "title": "Request No.", "data": "requestNo", "autoWidth": true, "searchable": true },
						{ "title": "Request Date", "data": "requestDate_Text", "autoWidth": true, "searchable": true },
						{ "title": "Status", "data": "requestStatus", "autoWidth": true, "searchable": true },
						{ "title": "PO No.", "data": "pO_Number", "autoWidth": true, "searchable": true },
						{ "title": "SKU Description ", "data": "skuDesc", "autoWidth": true, "searchable": true },
						{ "title": "Required Quantity", "data": "requestQty", "autoWidth": true, "searchable": true },
						{ "title": "No Of Files", "data": "nooffiles", "autoWidth": true, "searchable": true },
						{ "title": "Dispatch Details", "data": "shipmentdetail", "autoWidth": true, "searchable": true },
						{
							"title": "Received Qty", "data": null, "autoWidth": false, "searchable": false, "orderable": false, "width": "8%",
							"render": function (data, type, row, meta) {
								return '<input type="text" class="form-control form-control-sm isNumberKey Received_Qty" value="' + data.requestQty + '" autocomplete="off">';
							}
						},
						{
							"title": "Action", "data": null, "autoWidth": false, "searchable": false, "orderable": false, "width": "5%",
							"render": function (data, type, row, meta) {
								return '<div class="btn-group"><a class="btn btn-info btn-sm btn-flat" href="javascript:void(0);" '
									+ 'onclick="fnShow_Modal(\'@Url.Action("Partial_AddEditForm_Receipt","QRCode", new {  area = "Admin" })?Id=' + data.id
									+ '\', \'Request Details\', false, \'html\', false)"><span><i class="far fa-edit"></i></span></a></div>';
							}
						}
					],
				});

			$('#dataTable_PoDetails thead th:first').each(function () {
				var title = $(this).text();
				$(this).html('<input type="checkbox" id="checkbox_All" value="">');
				$(this).closest('th').addClass('select-checkbox');
				$(this).closest('th').addClass('text-center');
			});

			// Handle click on "Select all" control
			$('#dataTable_PoDetails thead th:first input#checkbox_All').on('click', function () {
				// Get all rows with search applied
				var rows = dataTableMain.rows({ 'search': 'applied' }).nodes();
				// Check/uncheck checkboxes for all rows in the table
				$('input[type="checkbox"]', rows).prop('checked', this.checked);

				try { fnChange_Checkbox_DataTable(dataTableMain); } catch { }
			});

			// Handle click on checkbox to set state of "Select all" control
			$('#dataTable_PoDetails tbody').on('change', 'input[type="checkbox"]', function () {
				// If checkbox is not checked
				if (!this.checked) {
					var el = $('#dataTable_PoDetails thead th:first input#checkbox_All').get(0);
					// If "Select all" control is checked and has 'indeterminate' property
					if (el && el.checked && ('indeterminate' in el)) {
						// Set visual state of "Select all" control
						// as 'indeterminate'
						el.indeterminate = true;
					}
				}
				try { fnChange_Checkbox_DataTable(dataTableMain); } catch { }
			});
		}

		function fnChange_Checkbox_DataTable($dataTableMain) {

			local_$dataTableMain = $dataTableMain;

			//// Iterate over all checkboxes in the table
			//local_$dataTableMain.$('input[type="checkbox"]:not(#checkbox_All):checked').each(function () {
			//	// If checkbox doesn't exist in DOM
			//	if (!$.contains(document, this)) {
			//		// If checkbox is checked
			//		if (this.checked) {
			//			// Create a hidden element
			//			$(form).append(
			//				$('<input>')
			//					.attr('type', 'hidden')
			//					.attr('name', this.name)
			//					.val(this.value)
			//			);
			//		}
			//	}
			//});
		}

		function fnClick_Receive($EstimateDate_Text, $ReceivedBy) {

			if (typeof local_$dataTableMain != 'undefined' && local_$dataTableMain != null) {

				if (typeof local_$dataTableMain.$('input[type="checkbox"]:not(#checkbox_All):checked') != 'undefined' && local_$dataTableMain.$('input[type="checkbox"]:not(#checkbox_All):checked') != null
					&& local_$dataTableMain.$('input[type="checkbox"]:not(#checkbox_All):checked').length > 0) {

					ShowLoader(true);

					Swal.fire({
						icon: "warning",
						title: 'QR Code Request(s) for Receipt',
						showDenyButton: false,
						showCancelButton: true,
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
						confirmButtonText: 'Confirm!',
						html: '<label class="col-form-label" style="align-content:start">Received Date <span style="color:red">*</span></label>' +
							'<input type="date" class="swal2-input" name="EstimateDate_Text" value="' + $EstimateDate_Text + '" autocomplete="off">' +
							'<label class="col-form-label" style="align-content:start">Received By <span style="color:red">*</span></label>' +
							'<input type="text" class="swal2-input" name="ReceivedBy" value="' + $ReceivedBy + '" autocomplete="off">',
						preConfirm: () => {
							

							var date = $('input[name="EstimateDate_Text"]').val();

							if (typeof date == 'undefined' || date == null || date == "") {
								Swal.showValidationMessage('Please select Received Date');
								return false;
							}

							var date = $('input[name="ReceivedBy"]').val();

							if (typeof date == 'undefined' || date == null || date == "") {
								Swal.showValidationMessage('Please enter Received user name');
								return false;
							}
						},
					}).then((result) => {

						if (result.isConfirmed === true) {

							let formData = new FormData();

							var Received_Date = $('input[name="EstimateDate_Text"]').val();
							Received_Date = moment(Received_Date).format('DD/MM/YYYY');

							//formData.append('EstimateDate_Text', Received_Date);

							var Received_By = $('input[name="ReceivedBy"]').val();

							//formData.append('ReceivedBy', Received_By);

							local_$dataTableMain.$('input[type="checkbox"]:not(#checkbox_All):checked').each(function (index, e) {
								// If checkbox doesn't exist in DOM
								if (this.checked) {

									var obj = local_$dataTableMain.rows($(e).closest('tr')[0]).data()[0];

									

									formData.append('viewModel[' + index + '].Id', obj.id);
									formData.append('viewModel[' + index + '].PlantId', obj.plantId);
									formData.append('viewModel[' + index + '].VPO_Id', obj.vpO_Id);
									formData.append('viewModel[' + index + '].VendorId', obj.vendorId);
									formData.append('viewModel[' + index + '].EstimateDate_Text', Received_Date);
									formData.append('viewModel[' + index + '].ReceivedBy', Received_By);
									try { formData.append('viewModel[' + index + '].RequestQty', $($(e).closest('tr')[0]).find("input.Received_Qty").val()); } catch { }
								}
							});

							$.ajax({
								type: 'POST',
								url: '@Url_RootToController/Save_Receipt',
								data: formData,
								cache: false,
								contentType: false,
								processData: false,
								dataType: "json",
								success: function (response) {
									
									try {
										ShowLoader(false);
										if (response.statusCode === 1) {
											if (typeof response.isConfirm != 'undefined' && response.isConfirm != '' && response.isConfirm != null && response.isConfirm == true)
												if (typeof response.redirectURL != 'undefined' && response.redirectURL != '' && response.redirectURL != null)
													CommonConfirmed_Success(response.message, response.redirectURL, null);
												else
													CommonConfirmed_Success(response.message, fnSubmitForm_Success, [response, $id]);
											else
												if (typeof response.redirectURL != 'undefined' && response.redirectURL != '' && response.redirectURL != null)
													window.location = response.redirectURL;
												else
													fnSubmitForm_Success(response, $id);
										}
										else {
											CommonAlert_Error(response.message, null)
										}
									} catch {
										window.location.reload();
									}
								},
								//xhr: function () {
								//    var fileXhr = $.ajaxSettings.xhr();
								//    if (fileXhr.upload) {
								//        $("progress").show();
								//        fileXhr.upload.addEventListener("progress", function (e) {
								//            if (e.lengthComputable) {
								//                $("#fileProgress").attr({
								//                    value: e.loaded,
								//                    max: e.total
								//                });
								//            }
								//        }, false);
								//    }
								//    return fileXhr;
								//},
								failure: function (response) {

									ShowLoader(false);
									Swal.fire({ icon: 'error', title: 'Oops...! Something went wrong!' })
								},
								error: function (response) {

									ShowLoader(false);
									Swal.fire({ icon: 'error', title: 'Oops...! Something went wrong!' })
								}
							});

						}

						ShowLoader(false);
					})

				} else
					CommonAlert_Error("Please select request row(s) from table.", null);
			} else
				CommonAlert_Error("Please select request row(s) from table.", null);

		}
	</script>
}

