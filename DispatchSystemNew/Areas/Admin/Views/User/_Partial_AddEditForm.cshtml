@model ResponseModel<User>
@{
	Layout = null;
	var IndexPageUrl = "/" + ViewContext.RouteData.Values["Area"].ToString() + "/" + ViewContext.RouteData.Values["Controller"].ToString() + "/Index";
}

<div class="col-12">
	<div class="card card-primary card-outline">
		<div class="card-header">
			<h3 class="card-title">@(Model.Obj.Id > 0 ? "Edit " : "Create") User</h3>

			<div class="card-tools">
				<button type="button" class="btn btn-primary btn-sm" title="Back To List" onclick="fnBackToList('@IndexPageUrl')">
					<i class="fas fa-arrow-left"></i> Back To List
				</button>
			</div>
		</div>

		<div class="card-body">
			<input type="text" class="form-control d-none" name="Id" value="@Model.Obj.Id">
			<input type="text" class="form-control d-none" id="Plant_Role" name="Plant_Role" value="@Model.Obj.Plant_Role">
			<input type="text" class="form-control d-none" id="Default_Plant" name="Default_Plant" value="@Model.Obj.Default_Plant">

			<div class="panel-divider">
				<span>Credential Details</span>
				<div class="row no-gutters p-0 m-0">
					<div class="col-12 card card-primary p-0 m-0 shadow-none mt-3">
						<div class="form-group row">
							<label for="Username" class="col-sm-2 col-form-label" style="align-content:start">User Id<span style="color:red">*</span></label>
							<div class="col-sm-4">
								<input type="text" class="form-control form-control-sm" name="Username" value="@Model.Obj.Username" maxlength="30" data-required data-msg="The Username field is required." autocomplete="off">
							</div>
							@if (Model.Obj.Id <= 0)
							{
								<label for="Password" class="col-sm-2 col-form-label">Password<span style="color:red">*</span></label>
								<div class="col-sm-4">
									<input type="password" id="password" class="form-control form-control-sm" name="Password" data-required data-msg="The Password field is required." autocomplete="off">
									<i class="fa fa-eye eye-pass fa-eye-slash" onclick="fnChangeIcon()" id="togglePassword"></i>
								</div>
							}
							else
							{
								<label for="IsPassword_Reset" class="col-sm-2 col-form-label text-right">Password Reset</label>
								<div class="col-sm-2">
									<div class="custom-control custom-switch custom-switch-off-danger custom-switch-on-success border-0 mb-2">
										<input type="checkbox" class="custom-control-input" id="switch_Password_Reset"
											   name="IsPassword_Reset" onchange="fnChange_Switch(this, 'label_Switch_Password_Reset')">
										<label class="custom-control-label" for="switch_Password_Reset" id="label_Switch_Password_Reset" data-true="Yes" data-false="No">No</label>
									</div>
									<span class="info-container"> <span class="info">Default password: 12345</span>   </span>
								</div>
							}
						</div>
					</div>
				</div>
				<div class="form-group row">
					<label class="col-sm-2 col-form-label text-right">Status </label>
					<div class="col-sm-4">
						<div class="custom-control custom-switch custom-switch-off-danger custom-switch-on-success border-0">
							<input type="checkbox" class="custom-control-input"
								   id="switch_Status" name="Is_Active" @(Model.Obj == null || Model.Obj.Is_Active == true || Model.Obj.Id == 0 ? "checked" : "")
								   onchange="fnChange_Switch(this, 'label_Switch_Status')">
							<label class="custom-control-label" for="switch_Status" id="label_Switch_Status" data-true="Active" data-false="Inactive">@((Model.Obj != null && Model.Obj.Is_Active == true) || Model.Obj == null || Model.Obj.Id == 0 ? "Active" : "Inactive")</label>
						</div>
					</div>
				</div>
			</div>

			<div class="panel-divider">
				<span>Personal Details</span>
				<div class="row no-gutters p-0 m-0">
					<div class="col-12 card card-primary p-0 m-0 shadow-none mt-3">

						<div class="form-group row">
							<label for="First_Name" class="col-sm-2 col-form-label">First Name <span style="color:red">*</span></label>
							<div class="col-sm-2">
								<input type="text" class="form-control form-control-sm" name="First_Name" value="@Model.Obj.First_Name" maxlength="50" data-required data-msg="The Firstname field is required." autocomplete="off">
							</div>
							<label for="Middle_Name" class="col-sm-1 col-form-label">Middle Name</label>
							<div class="col-sm-2">
								<input type="text" class="form-control form-control-sm" name="Middle_Name" value="@Model.Obj.Middle_Name" maxlength="50" autocomplete="off">
							</div>
							<label for="Last_Name" class="col-sm-1 col-form-label">Last Name <span style="color:red">*</span></label>
							<div class="col-sm-2">
								<input type="text" class="form-control form-control-sm" name="Last_Name" value="@Model.Obj.Last_Name" maxlength="50" data-required data-msg="The Lastname field is required." autocomplete="off">
							</div>
						</div>
						<div class="form-group row">
							<label for="MobileNo" class="col-sm-2 col-form-label">Mobile No. <span style="color:red">*</span></label>
							<div class="col-sm-4">
								<input type="text" class="form-control form-control-sm isNumberKey" name="MobileNo" maxlength="11" data-required data-msg="The Mobile No. field is required." autocomplete="off" value="@Model.Obj.MobileNo">
							</div>
							<label for="Alt_Mobile_No" class="col-sm-2 col-form-label">Alt. Mobile No.</label>
							<div class="col-sm-4">
								<input type="text" class="form-control form-control-sm isNumberKey" name="Alt_Mobile_No" maxlength="11" autocomplete="off" value="@Model.Obj.Alt_Mobile_No">
							</div>
						</div>
						<div class="form-group row">
							<label for="Email_Id" class="col-sm-2 col-form-label">Email <span style="color:red">*</span></label>
							<div class="col-sm-4">
								<input type="text" class="form-control form-control-sm" name="Email_Id" data-required data-msg="The Email field is required." autocomplete="off" value="@Model.Obj.Email_Id">
							</div>
							<label for="Alt_Email_Id" class="col-sm-2 col-form-label">Alt. Email</label>
							<div class="col-sm-4">
								<input type="text" class="form-control form-control-sm" name="Alt_Email_Id" autocomplete="off" value="@Model.Obj.Alt_Email_Id">
							</div>
						</div>
						<div class="form-group row">
							<label for="Full_Address" class="col-sm-2 col-form-label">Address<span style="color:red">*</span> </label>
							<div class="col-sm-10">
								<input type="text" class="form-control form-control-sm" name="Full_Address" data-required data-msg="The Address field is required." autocomplete="off" value="@Model.Obj.Full_Address">
							</div>
						</div>
						<div class="form-group row">
							<label class="col-sm-2 col-form-label">Country </label>
							<div class="col-sm-2">
								<select id="Country_Id" name="Country_Id" class="form-control form-control-sm select2" onchange="Get_StateList()">
									@if (Model != null && Model.SelectListItems != null)
									{
										foreach (var item in Model.SelectListItems.Where(x => x.Group == "C"))
										{
											if (item.Value == Convert.ToString(@Model.Obj.Country_Id))
											{
												<option value="@item.Value" selected>@item.Text</option>
											}
											else
											{
												<option value="@item.Value">@item.Text</option>
											}

										}
									}
								</select>
							</div>
							<label class="col-sm-1 col-form-label">State </label>
							<div class="col-sm-2">
								<select id="State_Id" name="State_Id" class="form-control form-control-sm select2" onchange="Get_DistrictList()">
									@if (Model != null && Model.SelectListItems != null)
									{
										foreach (var item in Model.SelectListItems.Where(x => x.Group == "S"))
										{
											if (item.Value == Convert.ToString(@Model.Obj.State_Id))
											{
												<option value="@item.Value" selected>@item.Text</option>
											}
											else
											{
												<option value="@item.Value">@item.Text</option>
											}

										}
									}
								</select>
							</div>
							<label class="col-sm-2 col-form-label">District</label>
							<div class="col-sm-2">
								<select id="District_Id" name="District_Id" class="col-sm-3 form-control form-control-sm select2">
									@if (Model != null && Model.SelectListItems != null)
									{
										foreach (var item in Model.SelectListItems.Where(x => x.Group == "D"))
										{
											if (item.Value == Convert.ToString(Model.Obj.District_Id))
											{
												<option value="@item.Value" selected>@item.Text</option>
											}
											else
											{
												<option value="@item.Value">@item.Text</option>
											}

										}
									}
								</select>
							</div>
						</div>
						<div class="form-group row">
							<label for="City" class="col-sm-2 col-form-label">City</label>
							<div class="col-sm-3">
								<input type="text" class="form-control form-control-sm" name="City" maxlength="11" autocomplete="off" value="@Model.Obj.City">
							</div>
							<label for="Postal_Code" class="col-sm-2 col-form-label">Postal Code</label>
							<div class="col-sm-2">
								<input type="text" class="form-control form-control-sm isNumberKey" name="Postal_Code" maxlength="6" autocomplete="off" value="@(Model.Obj.Postal_Code > 0 ? Model.Obj.Postal_Code.ToString():"" )">
							</div>

						</div>
					</div>
				</div>
			</div>

			<div class="panel-divider">
				<span>User Access</span>
				<div class="row no-gutters p-0 m-0">
					<div class="col-sm-6">
						<h1 class="m-0">&nbsp;</h1>
					</div>
					<div class="col-sm-4">
						<div class="float-sm-right">
							<button type="button" id="btnBackToList" class="btn btn-warning btn-md pull-right mr-2" onclick="fnAddNewRow('@string.Join("||", Model.SelectListItems.Where(x => x.Group == "P").Select(x=>x.Value + "|" + x.Text).ToList())', '@string.Join("||", Model.SelectListItems.Where(x => x.Group == "R").Select(x=>x.Value + "|" + x.Text).ToList())');">
								<i class="fas fa-plus"></i> &nbsp; Add new
							</button>
						</div>
					</div>
				</div>
				<div class="row no-gutters p-0 m-0 User_Access" style="margin-top:0rem !important;">
					<div class="col-12 card card-primary p-0 m-0 shadow-none mt-3">

						@{
							var selectedValue = Model.Obj.Plant_Role != null ? Model.Obj.Plant_Role.Split(',').ToList() : null;

							if (selectedValue != null)
							{
								for (int i = 0; i < selectedValue.Count(); i++)
								{
									var plant_role = selectedValue[i] != null ? selectedValue[i].Split('|').ToList() : null;

									<div class="form-group row">

										<label class="col-sm-1 col-form-label text-right">Plant</label>
										<div class="col-sm-4">
											<select class="form-control select2 w-100 Plant_Id" id="Plant_Id" onchange="fnChange_UserAccess(this)">
												@foreach (var item in Model.SelectListItems.Where(x => x.Group == "P"))
												{
													if (item.Value == (selectedValue[i] != null && selectedValue[i].Contains("|") ? Convert.ToString(selectedValue[i].Split('|')[0]) : ""))
													{
														<option value="@item.Value" selected>@item.Text</option>
													}
													else
													{
														<option value="@item.Value">@item.Text</option>
													}
												}
											</select>
										</div>

										<div class="col-sm-1">
											<div class="icheck-primary d-inline mr-5">
												@if (Model.Obj.Default_Plant == Convert.ToInt64(selectedValue[i].Split('|')[0]))
												{
													<input type="radio" id="radioPrimary_@i" name="PlantID" checked onchange="fnChange_UserAccess(null)">
													<label for="radioPrimary_@i"> Is Default?</label>
												}
												else
												{
													<input type="radio" id="radioPrimary_@i" name="PlantID" onchange="fnChange_UserAccess(null)">
													<label for="radioPrimary_@i"> Is Default?</label>
												}
											</div>
										</div>

										<label class="col-sm-1 col-form-label text-right">Role</label>
										<div class="col-sm-3">
											<select class="form-control select2 w-100 Role_Id" id="Role_Id" onchange="fnChange_UserAccess(null)">
												@foreach (var item in Model.SelectListItems.Where(x => x.Group == "R"))
												{
													if (item.Value == (selectedValue[i] != null && selectedValue[i].Contains("|") && selectedValue[i].Split("|").Count() > 0 ? Convert.ToString(selectedValue[i].Split('|')[1]) : ""))
													{
														<option value="@item.Value" selected>@item.Text</option>
													}
													else
													{
														<option value="@item.Value">@item.Text</option>
													}
												}
											</select>
										</div>

										<div class="col-sm-1 text-center"> <button type="button" class="btn btn-outline-info btn-sm" onclick="fnShow_Menu(this)">View Menus</button> </div>

										@if (i > 0)
										{
											<div class="col-sm-1 text-center"> <button type="button" class="btn btn-outline-danger btn-sm" onclick="fnRemove_Row(this)"><i class="far fa-trash-alt"></i></button> </div>
										}

									</div>
								}
							}
						}

					</div>
				</div>
			</div>

		</div>

		<div class="card-footer">
			<button type="submit" class="btn btn-success btnSubmit">Save</button>
			<button type="button" class="btn btn-danger" onclick="fnCloseParialView('divformSave', '#table_Common_SrNo');">Cancel</button>
		</div>
	</div>
</div>
