@model Dispatch_System.ResponseModel<Dispatch_System.WeightIn>

@{
	ViewData["Title"] = "Weighment Out";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- Content Header (Page header) -->
<section class="content-header bg-gradient-green" style="border-radius: 0.25rem">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-12">
				<h1 class="font-weight-bold">Weighment Out</h1>
			</div>
		</div>
	</div>
</section>

<!-- Main content -->
<section class="content p-0">
	<div class="container-fluid p-0">
		<div class="row no-gutters">
			<div class="col-12 card">
				<form id="formSave" action="@Url.Action("Save", "WeightOut", new { area = "Export" })" method="post" class="form-horizontal" enctype="multipart/form-data" data_form_isvalidate>
					<div class="card-body pb-0">
						<div class="panel-divider">
							<span>Search Details</span>
							<div class="row no-gutters p-0 m-0">
								<div class="col-10 card card-primary p-0 m-0 shadow-none" style="margin: 0rem !important;">
									<div class="form-horizontal">
										<div class="card-body py-1 px-0">
											<div class="form-group row">
												<div class="col-6">
													<div class="input-group input-group-sm ">
														<label class="col-sm-4 col-form-label pl-0">Vehicle Number / MDA Number </label>
														<span class="input-group-append col-sm-8 ml-0">
															<input type="text" class="form-control form-control-sm" id="inputSearch" autocomplete="off">
														</span>
													</div>
												</div>
												<div class="col-62">
													<span class="input-group-append ml-0">
														<button type="button" class="btn btn-info btn-flat mr-2" onclick="GetMDA(this, 'S')">Search</button>
														<button type="button" class="btn btn-info btn-flat b-radius-0" onclick="GetMDA(this, 'V')">View Vehicle</button>
													</span>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>

						<div class="panel-divider">
							<span>Vehicle Details</span>
							<div class="row no-gutters p-0 m-0">
								<div class="col-10 card card-primary p-0 m-0 shadow-none" style="margin: 0rem !important;">
									<div class="form-horizontal">
										<div class="card-body py-1 px-0">
											<div class="form-group row">
												<div class="col-6">
													<div class="input-group input-group-sm ">
														<label for="Truck_No" class="col-sm-4 col-form-label pl-0">Vehicle Number <span class="text-danger">*</span></label>
														<div class="col-sm-6">
															<input type="text" class="form-control form-control-sm" id="Truck_No" name="Truck_No" data-required data-msg="Vehicle Number is required." autocomplete="off" readonly>
															@*<input type="text" class="form-control form-control-sm d-none" id="MDA_No" name="MDA_No">*@
															<input type="text" class="form-control form-control-sm d-none" id="Id" name="Id">
															<input type="text" class="form-control form-control-sm d-none" id="Gate_In_Id" name="Gate_In_Id">
														</div>
													</div>
												</div>
												<div class="col-6">
													<div class="input-group input-group-sm ">
														<label for="MDA_No" class="col-sm-4 col-form-label" id="labelMDANo">MDA Number <span class="text-danger">*</span></label>
														<div class="col-sm-6">
															<input type="text" class="form-control form-control-sm" id="MDA_No" name="MDA_No" autocomplete="off" readonly>
														</div>
													</div>
												</div>
											</div>
											<div class="form-group row">
												<label for="Transporter_Name" class="col-sm-2 col-form-label" id="labelTransporter">Transporter Name  <span class="text-danger">*</span></label>
												<div class="col-sm-9">
													<input type="text" class="form-control form-control-sm" id="Transporter_Name" name="Transporter_Name" autocomplete="off" readonly>
												</div>
											</div>
											<div class="form-group row">
												<div class="col-6">
													<div class="input-group input-group-sm ">
														<label for="Driver_Name" class="col-sm-4 col-form-label pl-0">Driver Name <span class="text-danger">*</span></label>
														<span class="input-group-append col-sm-6 ml-0">
															<input type="text" class="form-control form-control-sm" id="Driver_Name" name="Driver_Name" data-required data-msg="The Driver Name field is required." autocomplete="off" readonly>
														</span>
													</div>
												</div>
												<div class="col-6">
													<div class="input-group input-group-sm ">
														<label for="Driver_Contact" class="col-sm-4 col-form-label pl-0">Driver Contact <span class="text-danger">*</span></label>
														<span class="input-group-append col-sm-6 ml-0">
															<input type="text" class="form-control form-control-sm isNumberKey" id="Driver_Contact" name="Driver_Contact" data-required data-msg="The Driver Contact field is required." autocomplete="off" readonly>
														</span>
													</div>
												</div>
											</div>
											<div class="form-group row">
												<div class="col-6">
													<div class="input-group input-group-sm ">
														<label for="Driver_Id_Proof_Type" class="col-sm-4 col-form-label pl-0">Driver Id Proof Type <span class="text-danger">*</span></label>
														<span class="input-group-append col-sm-6 ml-0">
															<input type="text" class="form-control form-control-sm" id="Driver_Id_Proof_Type" autocomplete="off" readonly>
														</span>
													</div>
												</div>
												<div class="col-6">
													<div class="input-group input-group-sm ">
														<label for="Driver_Id_Number" class="col-sm-4 col-form-label pl-0">Driver Id Number <span class="text-danger">*</span></label>
														<span class="input-group-append col-sm-6 ml-0">
															<input type="text" class="form-control form-control-sm isNumberKey" id="Driver_Id_Number" autocomplete="off" readonly>
														</span>
													</div>
												</div>
											</div>
											<div class="form-group row">
												<div class="col-6">
													<div class="input-group input-group-sm mt-3">
														<label for="Expected_Shipper" class="col-sm-4 col-form-label pl-0">Expected Bottle Qty</label>
														<span class="input-group-append col-sm-6 ml-0">
															<input type="text" class="form-control form-control-sm isNumberKey" id="Expected_Shipper" autocomplete="off" readonly>
														</span>
													</div>
												</div>
												<div class="col-6 d-none">
													<div class="input-group input-group-sm mt-3">
														<label for="Loaded_Shipper" class="col-sm-4 col-form-label pl-0">Loaded Shipper Qty</label>
														<span class="input-group-append col-sm-6 ml-0">
															<input type="text" class="form-control form-control-sm isNumberKey" id="Loaded_Shipper" autocomplete="off" readonly>
														</span>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>

						<div class="panel-divider">
							<span>Weighment In Details</span>
							<div class="row no-gutters p-0 m-0">
								<div class="col-10 card card-primary p-0 m-0 shadow-none" style="margin: 0rem !important;">
									<div class="form-horizontal">
										<div class="card-body py-1 px-0">
											<div class="form-group row">
												<label for="Tare_Wt" class="col-sm-2 col-form-label">Tare Weight <span class="text-danger">*</span></label>
												<div class="col-sm-4">
													<div class="input-group input-group-sm">
														<input type="text" id="Tare_Wt" name="Tare_Wt" class="form-control form-control-sm isNumberKey_Decimal" readonly>
													</div>
												</div>
												<label class="col-sm-2 col-form-label">Weighment In DateTime</label>
												<div class="col-sm-4">
													<input type="text" class="form-control form-control-sm" id="Tare_Wt_Dt" name="Tare_Wt_Dt" autocomplete="off" readonly>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>

						<div class="panel-divider">
							<span>Weighment Out Details</span>
							<div class="row no-gutters p-0 m-0">
								<div class="col-10 card card-primary p-0 m-0 shadow-none" style="margin: 0rem !important;">
									<div class="form-horizontal">
										<div class="card-body py-1 px-0">
											<div class="form-group row">
												<label for="Gross_Wt" class="col-sm-2 col-form-label">Gross Weight  <span class="text-danger">*</span></label>
												<div class="col-sm-4">
													<div class="input-group input-group-sm">
														<input type="text" id="Gross_Wt" name="Gross_Wt" class="form-control form-control-sm isNumberKey_Decimal" autocomplete="off" onchange="fnCalc_Net_Wt()">
														<span class="input-group-append ml-2">
															<button type="button" class="btn btn-info btn-flat mr-2" onclick="fnRead_Weight('#Gross_Wt')">Capture</button>
														</span>
													</div>
												</div>

											</div>

											<div class="form-group row">
												<label for="chkNetWeightManually" class="col-sm-3 col-form-label">Enter Net Weight Manually </label>
												<div class="col-sm-3">
													<div class="icheck-primary d-inline">
														<input type="checkbox" id="chkNetWeightManually">
														<label for="chkNetWeightManually"> &nbsp; </label>
													</div>
												</div>
											</div>

											<div class="form-group row">
												<label for="Net_Wt" class="col-sm-2 col-form-label">Net Weight  <span class="text-danger">*</span></label>
												<div class="col-sm-4">
													<div class="input-group input-group-sm">
														<input type="text" id="Net_Wt" name="Net_Wt" class="form-control form-control-sm isNumberKey_Decimal" readonly>
													</div>
												</div>

											</div>

											<div class="form-group row">
												<label for="Gross_Wt_Note" class="col-sm-2 col-form-label">Remarks </label>
												<div class="col-sm-10">
													<textarea rows="4" class="form-control" id="Gross_Wt_Note" name="Gross_Wt_Note" autocomplete="off"></textarea>
												</div>

											</div>

										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="card-footer">
						<button type="button" class="btn btn-info btn-flat px-3 mr-3 btnSubmit">Save</button>
						<button type="button" class="btn btn-danger btn-flat px-3 mr-3" onclick="fnClearFormData('#formSave')">Clear</button>
						<button type="button" class="btn btn-danger btn-flat px-3 mr-3">Close</button>
						<span class="float-right mr-3"><span class="text-danger">*</span> Mandatory Fields</span>
					</div>
				</form>
			</div>
		</div>
	</div>
</section>

@section Scripts {
	<script type="text/javascript">
		var table = {};

		$(document).ready(function () {

			$('input#MDA').prop('checked', true);
			$('input#MDA').trigger('change');

		});

		function fnChange_Select($this, $selecter) {

			fnClear_MDA();

		}

		function GetMDA($this, $type) {
			ShowLoader(true);

			if (typeof $type != 'undefined' && $type != null && $type != "null" && $type.trim() != 'S') $('#inputSearch').val('').trigger('change');
			//	fnClear_MDA();

			if ($('#modal-xl').hasClass('show')) $('#modal-xl').hide(); //$('#modal-xl').modal('hide');

			$.ajax({
				type: "GET",
				url: '@Url.Action("GetMDA", "WeightOut", new { area = "Export" })?type=' + $type + '&searchTerm=' + $('#inputSearch').val() + '&searchTerm_RFID=',
				data: null,
				contentType: "application/json; charset=utf-8",
				dataType: "html",
				success: function (response) {

					fnClear_MDA();

					if (typeof response == 'undefined' || response == null || response == 'null' || response.length <= 0) {
						CommonAlert_Error("No record(s) found");
						return false;
					}

					if (response.indexOf('{') == 0) {

						setTimeout(function () {

							try {

								if (typeof response != 'undefined' && response != null && response != "null" && response.length > 0) {

									var selectedData = JSON.parse(response);

									$('#Id').val(selectedData['id']);
									$('#Gate_In_Id').val(selectedData['gateIn_Id']);
									$('#Truck_No').val(selectedData['truck_No']);
									$('#MDA_No').val(selectedData['mdA_No']);
									$('#Transporter_Name').val(selectedData['transporter_Name']);
									$('#Driver_Name').val(selectedData['driver_Name']);
									$('#Driver_Contact').val(selectedData['driver_Contact']);
									$('#Tare_Wt').val(selectedData['tare_Wt']);
									$('#Tare_Wt_Dt').val(selectedData['tare_Wt_Dt']);
									$('#Driver_Id_Proof_Type').val(selectedData['driver_Id_Type']);
									$('#Driver_Id_Number').val(selectedData['driver_Id_Number']);
									$('#UOM').val(selectedData['uOM']);
									$('#Expected_Shipper').val(selectedData['expected_Shipper']);
									$('#Loaded_Shipper').val(selectedData['loaded_Shipper']);

									$('#Verified_Documents').prop('checked', (typeof (selectedData['verified_Documents']) != 'undefined' && (selectedData['verified_Documents']) != null && (selectedData['verified_Documents']) == 'True' ? true : false));

									$('#Id').trigger('change');
									$('#Gate_In_Id').trigger('change');
									$('#Truck_No').trigger('change');
									$('#MDA_No').trigger('change');
									$('#Transporter_Name').trigger('change');
									$('#Driver_Name').trigger('change');
									$('#Driver_Contact').trigger('change');
									$('#Tare_Wt').trigger('change');
									$('#Tare_Wt_Dt').trigger('change');
									$('#Driver_Id_Proof_Type').trigger('change');
									$('#Driver_Id_Number').trigger('change');
									$('#UOM').trigger('change');
									$('#Expected_Shipper').trigger('change');
									$('#Loaded_Shipper').trigger('change');

								} else
									CommonAlert_Error("No record(s) found");

							} catch { }

							ShowLoader(false);

						}, 1000);

					}
					else {

						$('#modal-xl .modal-body').html('');
						$('#modal-xl .modal-body').append(response);

							if ($type == 'S')
								$('#modal-xl .modal-title').html('Search MDA');
							else
								$('#modal-xl .modal-title').html('View MDA');

						setTimeout(function () {

							try {

								if ($.fn.DataTable.isDataTable('#modal-xl .modal-body #table_Common')) {
									$('#modal-xl .modal-body #table_Common').DataTable().destroy();
								}

								var indexLastCol = $('#modal-xl .modal-body #table_Common tbody tr:eq(0) td').length - 1;

								table = $('#modal-xl .modal-body #table_Common').DataTable({
									paging: true,
									lengthChange: true,
									searching: true,
									ordering: true,
									info: true,
									autoWidth: true,
									responsive: true,
									order: [[indexLastCol, 'asc']],
									pageLength: 10,
									lengthMenu: [
										[10, 25, 50, -1],
										[10, 25, 50, 'All']
									],
									//columnDefs: [
									//	{ "targets": 0, "className": "text-center", "width": "3%", "autoWidth": false, "searchable": false, "orderable": false },
									//	{ "targets": -1, "className": "text-center", "width": "3%", "autoWidth": false, "searchable": false, "orderable": false }
									//],
									fixedColumns: true,
									dom: "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
										"<'row'<'col-sm-12'tr>>" +
										"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>"
								});

								$('#modal-xl .modal-body #table_Common').css('width', '100%');

								//let table = new DataTable('#example', {
								//	select: true
								//});

								table.on('click', 'tbody tr', function (e) {

									$(e.currentTarget.parentElement).find('tr').each(function (i, ez) {
										if (i != (e.currentTarget.rowIndex - 1))
											$(ez).removeClass('bg-info');
									});

									if (e.currentTarget.classList.contains('bg-info')) {
										//clear
										$('#Id').val('');
										$('#Gate_In_Id').val('');
										$('#Truck_No').val('');
										$('#MDA_No').val('');
										$('#Transporter_Name').val('');
										$('#Driver_Name').val('');
										$('#Driver_Contact').val('');
										$('#Tare_Wt').val('');
										$('#Tare_Wt_Dt').val('');
										$('#Driver_Id_Proof_Type').val('');
										$('#Driver_Id_Number').val('');
										$('#Verified_Documents').prop('checked', false);
										$('#UOM').val('');
									$('#Expected_Shipper').val('');
									$('#Loaded_Shipper').val('');
									}

									e.currentTarget.classList.toggle('bg-info');

									var selectedData = table.rows('.bg-info').data();


									$('#labelWeight_Saved').html('');
									$('#labelWeight').html('');
									$('#labelWeight_Saved').append('<span>Tare Weight <span class="text-danger">*</span></span>');
									$('#labelWeight').append('<span>Gross Weight <span class="text-danger">*</span></span>');

									if (typeof selectedData != 'undefined' && selectedData != null && selectedData.length >= 1) {

											$('#Id').val(selectedData[0][7]);
											$('#Gate_In_Id').val(selectedData[0][12]);
											$('#Truck_No').val(selectedData[0][0]);
											$('#MDA_No').val(selectedData[0][1]);
											$('#Transporter_Name').val(selectedData[0][5]);
											$('#Driver_Name').val(selectedData[0][3]);
											$('#Driver_Contact').val(selectedData[0][4]);
											$('#Tare_Wt').val(selectedData[0][9]);
											$('#Tare_Wt_Dt').val(selectedData[0][10]);
											$('#Driver_Id_Proof_Type').val(selectedData[0][13]);
											$('#Driver_Id_Number').val(selectedData[0][14]);
											$('#UOM').val(selectedData[0][15]);
									$('#Expected_Shipper').val(selectedData[0][17]);
									$('#Loaded_Shipper').val(selectedData[0][18]);

											$('#Verified_Documents').prop('checked', (typeof (selectedData[0][11]) != 'undefined' && (selectedData[0][11]) != null && (selectedData[0][11]) == 'True' ? true : false));

									}


									$('#Id').trigger('change');
									$('#Gate_In_Id').trigger('change');
									$('#Truck_No').trigger('change');
									$('#MDA_No').trigger('change');
									$('#Transporter_Name').trigger('change');
									$('#Driver_Name').trigger('change');
									$('#Driver_Contact').trigger('change');
									$('#Tare_Wt').trigger('change');
									$('#Tare_Wt_Dt').trigger('change');
									$('#Driver_Id_Proof_Type').trigger('change');
									$('#Driver_Id_Number').trigger('change');
									$('#UOM').trigger('change');
									$('#Expected_Shipper').trigger('change');
									$('#Loaded_Shipper').trigger('change');

								});


							} catch { }

							if ($('#modal-xl .modal-body #table_Common tbody tr').length > 0)
								$('#modal-xl').show(); //$('#modal-xl').modal('show');
							else
								CommonAlert_Error("No record(s) found");

							ShowLoader(false);

						}, 1000);
					}
				},
				failure: function (response) { fnClear_MDA(); CommonAlert_Error(null); },
				error: function (response) { fnClear_MDA(); CommonAlert_Error(null); }
			});
		}

		function fnSelect_MDA() {

			if ($('#table_Common tbody tr.bg-info').length <= 0) {
				CommonAlert_Error("Please select one MDA Number");
				return false;
			}
			else {
				fnClose_Modal()
			}
		}

		function fnClear_MDA() {

			$('#table_Common tbody tr.bg-info').each(function (i, ez) {
				$(ez).removeClass('bg-info');
			});

			$('#inputSearch').val('');
			$('#Id').val('');
			$('#Gate_In_Id').val('');
			$('#Truck_No').val('');
			$('#MDA_No').val('');
			$('#Transporter_Name').val('');
			$('#Driver_Name').val('');
			$('#Driver_Contact').val('');
			$('#Tare_Wt').val('');
			$('#Tare_Wt_Dt').val('');
			$('#Driver_Id_Proof_Type').val('');
			$('#Driver_Id_Number').val('');
			$('#UOM').val('');
									$('#Expected_Shipper').val('');
									$('#Loaded_Shipper').val('');
			$('#Verified_Documents').prop('checked', false);

			$('#inputSearch').trigger('change');
			$('#Id').trigger('change');
			$('#Gate_In_Id').trigger('change');
			$('#Truck_No').trigger('change');
			$('#MDA_No').trigger('change');
			$('#Transporter_Name').trigger('change');
			$('#Driver_Name').trigger('change');
			$('#Driver_Contact').trigger('change');
			$('#Tare_Wt').trigger('change');
			$('#Tare_Wt_Dt').trigger('change');
			$('#Driver_Id_Proof_Type').trigger('change');
			$('#Driver_Id_Number').trigger('change');
			$('#UOM').trigger('change');
									$('#Expected_Shipper').trigger('change');
									$('#Loaded_Shipper').trigger('change');
		}

		$(document).on("change", 'input[name="Option"]', function (e) {

			$('input.truck_no').val('')
			$('input.truck_no').trigger('change')
			$('.mda_no input').val('')
			$('.mda_no input').trigger('change')

			if (e.target.id == 'MDA') {
				//if ($('.mda_no').hasClass('d-none'))
				//	$('.mda_no').removeClass('d-none')

				$('input.truck_no').prop('readonly', true);
			} else {
				//if (!$('.mda_no').hasClass('d-none'))
				//	$('.mda_no').addClass('d-none')

				$('input.truck_no').prop('readonly', false);
			}
		});

		$(document).on("change", 'input#chkNetWeightManually', function (e) {

			$('input#Net_Wt').prop('readonly', !e.target.checked);

			fnCalc_Net_Wt();
		});

		function fnCalc_Net_Wt() {

			var Gross_Wt = $('#Gross_Wt').val();
			var Tare_Wt = $('#Tare_Wt').val();

			if (typeof Gross_Wt == 'undefined' || Gross_Wt == null || Gross_Wt == '' || isNaN(parseFloat(Gross_Wt))) { Gross_Wt = 0; } else { Gross_Wt = parseFloat(Gross_Wt); }

			if (typeof Tare_Wt == 'undefined' || Tare_Wt == null || Tare_Wt == '' || isNaN(parseFloat(Tare_Wt))) { Tare_Wt = 0; } else { Tare_Wt = parseFloat(Tare_Wt); }

			var Net_Wt = Gross_Wt - Tare_Wt;

			if (typeof Net_Wt == 'undefined' || Net_Wt == null || Net_Wt == '' || isNaN(parseFloat(Net_Wt))) { Net_Wt = '0'; }
			else { Net_Wt = parseFloat(Net_Wt); }

			$('input#Net_Wt').val(Net_Wt);
			$('input#Net_Wt').trigger('change');

		}

		function fnRead_Weight($selector) {

			ShowLoader(true);

			if ($('#modal-xl').hasClass('show')) $('#modal-xl').hide();

			$($selector).val('');
			$($selector).trigger('change');


			var strEntries = '@Convert.ToString(Dispatch_System.AppHttpContextAccessor.AppConfiguration.GetSection("Weighbridge_Interface_IPs_Ports").Value ?? "")';

			var listWeighbridge = [];
			var entries = strEntries.split(',');

			entries.forEach(function (entry) {
				var parts = entry.trim().split(':');
				if (parts.length === 3 && !isNaN(parseInt(parts[2], 10))) {
					listWeighbridge.push({
						Name: parts[0],
						IP: parts[1],
						Port: parseInt(parts[2], 10)
					});
				}
			});


			if (typeof listWeighbridge != 'undefined' && listWeighbridge != null && listWeighbridge.length > 1) {

				var strHTML = '';

				listWeighbridge.forEach(function (tuple, i) {
					var radioButton = '<label><input type="radio" name="weighbridge" value="' + tuple.IP + ':' + tuple.Port + '" ' + (i == 0 ? "checked" : "") + '>' + tuple.Name + '</label><br>';
					strHTML += radioButton;
				});

				Swal.fire({
					icon: 'warning',
					title: "Select Weighbridge",
					showDenyButton: false,
					showCancelButton: true,
					confirmButtonText: 'Confirm!',
					cancelButtonText: 'Cancel',
					confirmButtonColor: '#3085d6',
					cancelButtonColor: '#d33',
					html: strHTML,
				}).then((result) => {

					if (result != null && result.isConfirmed == true
						&& typeof $('input[name="weighbridge"]:checked').val() != 'undefined'
						&& $('input[name="weighbridge"]:checked').val() != null
						&& $('input[name="weighbridge"]:checked').val().length > 0) {

						$.ajax({
							type: "GET",
							url: '@Url.Action("GetWeighbridge_Interface_Data", "WeightIn", new { area = "Export" })?Weighbridge_Id=' + $('input[name="weighbridge"]:checked').val(),
							data: null,
							contentType: "application/json; charset=utf-8",
							dataType: "json",
							success: function (response) {

								setTimeout(function () {

									ShowLoader(false);

									try {
										if (typeof response != 'undefined' && response != '' && response != null
											&& typeof response.statusCode != 'undefined' && response.statusCode != '' && response.statusCode != null && response.statusCode === 1) {
											$($selector).val(response.data1);
											$($selector).trigger('change');
										}
										else {
											CommonAlert_Error(response.message, null)
										}
									} catch { $($selector).val('0'); $($selector).trigger('change'); }

								}, 2000);
							},
							failure: function (response) { ShowLoader(false); $($selector).val('0'); $($selector).trigger('change'); },
							error: function (response) { ShowLoader(false); $($selector).val('0'); $($selector).trigger('change'); }
						});
					}
				});

			}
			else {
				$.ajax({
					type: "GET",
					url: '@Url.Action("GetWeighbridge_Interface_Data", "WeightIn", new { area = "Export" })?Weighbridge_Id=',
					data: null,
					contentType: "application/json; charset=utf-8",
					dataType: "json",
					success: function (response) {

						setTimeout(function () {

							ShowLoader(false);

							try {
								if (typeof response != 'undefined' && response != '' && response != null
									&& typeof response.statusCode != 'undefined' && response.statusCode != '' && response.statusCode != null && response.statusCode === 1) {
									$($selector).val(response.data1);
									$($selector).trigger('change');
								}
								else {
									CommonAlert_Error(response.message, null)
								}
							} catch { $($selector).val('0'); $($selector).trigger('change'); }

						}, 2000);
					},
					failure: function (response) { ShowLoader(false); $($selector).val('0'); $($selector).trigger('change'); },
					error: function (response) { ShowLoader(false); $($selector).val('0'); $($selector).trigger('change'); }
				});
			}

		}

		function fnChange_WeighOut_Wt() {

			var WeighOut_Wt = $('#WeighOut_Wt').val();
			var WeighIn_Wt = $('#WeighIn_Wt').val();

			if (typeof WeighOut_Wt == 'undefined' || WeighOut_Wt == null || WeighOut_Wt == '' || isNaN(parseFloat(WeighOut_Wt))) { WeighOut_Wt = 0; } else { WeighOut_Wt = parseFloat(WeighOut_Wt); }

			if (typeof WeighIn_Wt == 'undefined' || WeighIn_Wt == null || WeighIn_Wt == '' || isNaN(parseFloat(WeighIn_Wt))) { WeighIn_Wt = 0; } else { WeighIn_Wt = parseFloat(WeighIn_Wt); }

			var Net_Wt = WeighOut_Wt - WeighIn_Wt;

			if (typeof Net_Wt == 'undefined' || Net_Wt == null || Net_Wt == '' || isNaN(parseFloat(Net_Wt))) { Net_Wt = '0'; }
			else { Net_Wt = parseFloat(Net_Wt); }

			if (Net_Wt < 0) Net_Wt = Net_Wt * (-1);

			$('input#Net_Wt').val(Net_Wt);
			$('input#Net_Wt').trigger('change');

		}

	</script>
}
