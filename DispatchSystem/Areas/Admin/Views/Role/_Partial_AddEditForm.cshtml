@model ResponseModel<Role>
@{
	Layout = null;
	var IndexPageUrl = "/" + ViewContext.RouteData.Values["Area"].ToString() + "/" + ViewContext.RouteData.Values["Controller"].ToString() + "/Index";
}

<div class="col-12">
	<div class="card card-primary card-outline">
		@* <form id="formSave" asp-area="Admin" asp-controller="Role" asp-action="Save" method="post" class="form-horizontal" enctype="multipart/form-data"> *@
		<div class="card card-primary card-outline">
			<div class="card-header">
				<h3 class="card-title">@(Model.Obj.Id > 0 ? "Edit " : "Create") Role</h3>
				<input type="text" class="form-control d-none" id="Id" name="Id" value="@(Model.Obj != null && Model.Obj.Id > 0 ? Model.Obj.Id.ToString() : "")">

				<div class="card-tools">
					<button type="button" class="btn btn-primary btn-sm" title="Back To List" onclick="fnBackToList('@IndexPageUrl')">
						<i class="fas fa-arrow-left"></i> Back To List
					</button>
				</div>
			</div>

			<div class="card-body">
				<div class="form-group row">

					<label for="Role_Name" class="col-sm-2 col-form-label text-right">Role Name<span style="color:red">*</span></label>
					<div class="col-sm-4">
						<input type="text" class="form-control form-control-sm" name="Role_name" value="@Model.Obj.Role_Name" maxlength="80" data-required data-msg="The Role name field is required." autocomplete="off" />
					</div>

					<label class="col-sm-2 col-form-label text-right @(Model.SelectListItems != null && Model.SelectListItems.Where(x => x.Group == "P").Count() > 0  ? "":"d-none")">Plant</label>
					<div class="col-sm-4 @(Model.SelectListItems != null && Model.SelectListItems.Where(x => x.Group == "P").Count() > 0 ? "":"d-none")">
						<select id="Plant_Id" name="Plant_Id" class="form-control select2 w-100">
							@foreach (var item in Model.SelectListItems.Where(x => x.Group == "P"))
							{
								if (item.Value == Model.Obj.Plant_Id.ToString() || ((Model.Obj == null || Model.Obj.Id <= 0) && Model.SelectListItems.Where(x => x.Group == "P").Count() == 1))
								{
									<option value="@item.Value" selected>@item.Text</option>
								}
								else
								{
									<option value="@item.Value">@item.Text</option>
								}
							}
						</select>
					</div>
				</div>

				<div class="form-group row">
					<label class="col-sm-2 col-form-label text-right">Status </label>
					<div class="col-sm-4">
						<div class="custom-control custom-switch custom-switch-off-danger custom-switch-on-success border-0">
							<input type="checkbox" class="custom-control-input"
								   id="switch_Status" name="IsActive" @(Model.Obj == null || Model.Obj.IsActive == true || Model.Obj.Id == 0 ? "checked" : "")
								   onchange="fnChange_Switch(this, 'label_Switch_Status')">
							<label class="custom-control-label" for="switch_Status" id="label_Switch_Status" data-true="Active" data-false="Inactive">@((Model.Obj != null && Model.Obj.IsActive == true) || Model.Obj == null || Model.Obj.Id == 0 ? "Active" : "Inactive")</label>
						</div>
					</div>
				</div>

				<div class="form-group row">
					<label class="col-sm-2 col-form-label text-right">Administrator <span style="color:red">&nbsp;</span></label>
					<div class="col-sm-4">
						<div class="custom-control custom-switch custom-switch-off-danger custom-switch-on-success border-0">
							<input type="checkbox" class="custom-control-input"
								   id="switch_Admin" name="IsAdmin" @(Model.Obj == null || Model.Obj.IsAdmin == true ? "checked" : "")
								   onchange="fnChange_Switch(this, 'label_Switch_Admin')">
							<label class="custom-control-label" for="switch_Admin" id="label_Switch_Admin" data-true="Yes" data-false="No">@((Model.Obj != null && Model.Obj.IsAdmin == true) ? "Yes" : "No")</label>
						</div>
					</div>
				</div>



				@*@if (Common.IsAdmin())
				{
				var selectedValue = Model.Obj.SelectedPlant.Split(',').ToList();

				<div class="form-group row">
				<label class="col-sm-2 col-form-label text-right">Select Plant(s)</label>
				<div class="col-sm-8 d-flex flex-wrap">
				<select multiple id="selectPlant" class="form-control select2 w-100" onchange="fnChange_Select('Plant')">
				@if (Model.SelectListItems != null)
				{
				foreach (var item in Model.SelectListItems.Where(x => x.Group == "P"))
				{
				if (selectedValue != null && selectedValue.Any(x => x == item.Value))
				{
				<option value="@item.Value" selected>@item.Text</option>
				}
				else
				{
				<option value="@item.Value">@item.Text</option>
				}
				}
				}
				</select>

				<input type="text" id="inputPlant" name="SelectedPlant" value="@Model.Obj.SelectedPlant" class="d-none" />
				</div>
				</div>
				}*@

				@if (Common.IsAdmin())
				{
					var selectedValue = Model.Obj.SelectedMenu != null ? Model.Obj.SelectedMenu.Split(',').ToList() : null;

					@*<div class="form-group row">
				<label class="col-sm-2 col-form-label text-right">Select Menu(s)</label>
				<div class="col-sm-8 d-flex flex-wrap">
				<select multiple id="selectMenu" class="form-control select2 w-100" onchange="fnChange_Select('Menu')">
				<option value="">-- Select --</option>
				@if (Model.SelectListItems != null)
				{
				foreach (var item in Model.SelectListItems.Where(x => x.Group == "M"))
				{
				if (selectedValue != null && selectedValue.Any(x => x == item.Value))
				{
				<option value="@item.Value" selected>@item.Text</option>
				}
				else
				{
				<option value="@item.Value">@item.Text</option>
				}
				}
				}
				</select>

				<input type="text" id="inputMenu" name="SelectedMenu" value="@Model.Obj.SelectedMenu" class="d-none" />
				</div>
				</div>*@


					<div class="form-group row">
						<label class="col-sm-2 col-form-label text-right">Select Menu(s)</label>
						<div class="col-sm-8 d-flex flex-column">
							
							@if (Model.SelectListItems != null && Model.SelectListItems.Where(x => x.Group == "M").Count() > 0)
							{
								<dl id="selectMenu">
									@foreach (var menu in Model.SelectListItems.Where(x => x.Group == "M" && Convert.ToDecimal(x.Value2) == 0).OrderBy(x => Convert.ToDecimal(x.Value3))
											.GroupBy(x => new { Id = Convert.ToDecimal(x.Value), Display_Name = x.Text, Parent_Id = Convert.ToDecimal(x.Value2) }).ToList())
									{
										if (Model.SelectListItems.Where(x => x.Group == "M").Any(x => Convert.ToDecimal(x.Value2) == menu.Key.Id))
										{
											<dt>
												@menu.Key.Display_Name &nbsp;
												<div class="icheck-primary">
													<input type="checkbox" id="checkboxPrimary_@menu.Key.Id"
														   onchange="fnChange_SelectAll(this,'@menu.Key.Id')">
													<label for="checkboxPrimary_@menu.Key.Id">&nbsp;</label>
												</div>
											</dt>


											@foreach (var menuChild in Model.SelectListItems.Where(x => x.Group == "M" && Convert.ToDecimal(x.Value2) == menu.Key.Id).OrderBy(x => Convert.ToDecimal(x.Value3)))
											{
												<dd class="ml-3 dd_@menu.Key.Id">
													<div class="icheck-primary">
														<input type="checkbox" id="checkboxPrimary_@menuChild.Value" data-id="@menuChild.Value"
															   onchange="fnChange_Select('Menu')"
														@(selectedValue != null && selectedValue.Any(x => x == menuChild.Value) ? "checked" : "")>
														<label for="checkboxPrimary_@menuChild.Value">@menuChild.Text</label>
													</div>
												</dd>
											}
										}
										else
										{
											<dd class="ml-3">
												<div class="icheck-primary">
													<input type="checkbox" id="checkboxPrimary_@menu.Key.Id" data-id="@menu.Key.Id"
														   onchange="fnChange_Select('Menu')"
													@(selectedValue != null && selectedValue.Any(x => x == menu.Key.Id.ToString()) ? "checked" : "")>
													<label for="checkboxPrimary_@menu.Key.Id">@menu.Key.Display_Name</label>
												</div>
											</dd>
										}
									}
								</dl>
							}

							<input type="text" id="inputMenu" name="SelectedMenu" value="@Model.Obj.SelectedMenu" class="d-none" />
						</div>
					</div>

				}

			</div>
			<div class="card-footer text-center">
				<button type="submit" class="btn btn-success btnSubmit">Save</button>
				<button type="button" class="btn btn-danger" onclick="fnCloseParialView('divformSave', '#table_Common_SrNo');">Cancel</button>
			</div>
		</div>
	</div>
</div>
